@model TaCertoForms.Models.ViewModelAtividade

@{
    ViewBag.Title = "Create";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>Cadastro de Atividade</h1>
        <ol class="breadcrumb">
            <li>
                <a data-toggle="tooltip" data-placement="bottom" data-original-title="Acesso a tela de boas vindas" href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i>Início</a>
            </li>
            <li class="active">
                <a data-toggle="tooltip" data-placement="bottom" data-original-title="Acesso a tela de listagem de atividades" href="@Url.Action("Index", "Atividade")">Atividades</a>
            </li>
        </ol>
    </section>
    <section class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Novo Registro</h3>
                <a href="@Url.Action("Index", "Atividade")" data-toggle="tooltip" data-placement="bottom" data-original-title="Voltar para a tela de listagem de atividades" class="btn btn-sm btn-default btn-flat pull-right">Voltar</a>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="col-xs-12">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-xs-12 col-md-3" data-toggle="tooltip" data-placement="bottom" data-original-title="Título que aparecerá para o aluno ao acessar a atividade pelo aplicativo">
                                @Html.Label("Título")
                                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-3" data-toggle="tooltip" data-placement="bottom" data-original-title="Período em que a atividade ficará disponível para o aluno responder">
                                @Html.Label("Período")
                                @Html.TextBox("Periodo", null, new { @class = "form-control", @type = "text", @id = "periodo" })
                                @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-md-3">
                                <div class="turmas" data-toggle="tooltip" data-placement="bottom" data-original-title="Seleção da turma que terá acesso a atividade cadastrada">
                                    @Html.Label("Turma")
                                    @Html.DropDownList("Turma",
                                    new SelectList(new List<String>()),
                                    "Turma",
                                    new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-xs-12 col-md-3">
                                <div class="disciplinas" data-toggle="tooltip" data-placement="bottom" data-original-title="Seleção da disciplina que terá acesso a atividade cadastrada">
                                    @Html.Label("Disciplina")
                                    @Html.DropDownList("Disciplina",
                                    new SelectList(new List<String>()),
                                    "Disciplina",
                                    new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group col-xs-12 col-md-3" data-toggle="tooltip" data-placement="bottom" data-original-title="Quantidade de vezes que o aluno poderá resolver a atividade">
                                @Html.Label("Número de tentativas")
                                @Html.EditorFor(model => model.NumeroTentativas, new { htmlAttributes = new { @min = 1, @max = 9999999, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NumeroTentativas, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-md-3" data-toggle="tooltip" data-placement="bottom" data-original-title="Definição se as questões cadastradas serão apresentadas em ordem aleatória">
                                @Html.Label("É aleatório?")
                                @Html.DropDownList("IsAleatorio",
                                new List<SelectListItem> {
                                    new SelectListItem() { Text = "Sim", Value = true.ToString()},
                                    new SelectListItem() { Text = "Não", Value = false.ToString()}
                                },
                                null,
                                new { @class = "form-control", @id = "tabela-de-certo-erradoResposta" })
                            </div>
                            <div class="form-group col-xs-12 col-md-3" data-toggle="tooltip" data-placement="bottom" data-original-title="Se a atividade cadastrada é prova ou tarefa">
                                @Html.Label("É prova?")
                                @Html.DropDownList("IsProva",
                                new List<SelectListItem> {
                                    new SelectListItem() { Text = "Sim", Value = true.ToString()},
                                    new SelectListItem() { Text = "Não", Value = false.ToString()}
                                },
                                null,
                                new { @class = "form-control", @id = "tabela-de-certo-erradoResposta" })
                            </div>
                        </div>
                    </div>                    
                </div>
                <div class="box-footer">
                    <input type="submit" value="Próximo" class="btn btn-primary pull-right"  data-toggle="tooltip" data-placement="bottom" data-original-title="Avançar para a tela de cadastro de questões"/>
                </div>
            }
        </div>
    </section>
</div>

<script>    
    $(document).ready(function () {

        $('#periodo').daterangepicker({
            timePicker: true,
            timePickerIncrement: 30,
            minDate: new Date(Date.now()),
            locale: { format: 'DD/MM/YYYY hh:mm:ss' }
        });
    
        $('.turmas').on('change', '#turmas-select-atividades', function () {
            if ($(this).val() != '') {
                atualizar_disciplinas($(this).val());
            } else {
                $('#disciplinas-select').find('option').remove().end().append('<option value="">Disciplina</option>').val('');
            }
        });
        
        function atualizar_turmas() {
            $.ajax({
                url: '@Url.Action("AjaxTurmas", "Turma")',
                    data: {
                        IdInstituicao: '@Html.Raw(Session["IdInstituicao"])',
                        scope: 'atividades'
                },
                cache: false,
                dataType: 'html',
                success: function (data) {   
                    $('.turmas').html(data);
                },
                error: function () {
                    alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
                }
            });
        }
        atualizar_turmas();    

        function atualizar_disciplinas(IdTurma) {
            $.ajax({
            url: '@Url.Action("AjaxDisciplinas", "Disciplina")',
                data: {
                    IdTurma: IdTurma
            },
            cache: false,                
            dataType: 'html',
                success: function (data) {
                    console.log(data);
                $('.disciplinas').html(data);
            },
            error: function () {
                alert('Ocorreu algum erro de conexão. Por favor, tente novamente mais tarde');
            }
            });
        }
    });    
</script>